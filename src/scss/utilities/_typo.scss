h1 {
  font-size: 32px;
}

h2 {
  font-size: 26px;
}

h3 {
  font-size: 20px;
}

h4 {
  font-size: 18px;
}

h5 {
  font-size: 16px;
}

h6 {
  font-size: 14px;
}

h1, h2, h3, h4, h5, h6 {
  padding: 0;
  margin: 0;
  font-weight: 400;
  color: var(--heading-color);
}

.tx-rtl {
  direction: rtl;
  text-align: start;

}

.tx-ltr {
  direction: ltr;
  text-align: start;
}

.tx-start {
  text-align: start;
}

.tx-end {
  text-align: end;
}

.tx-center {
  text-align: center;
}

.tx-right {
  text-align: right;
}

.tx-left {
  text-align: left;
}

.tx-nowrap {
  white-space: nowrap;
}

.tx-break {
  word-break: break-all;
}

.word-break {
  word-break: break-word !important;
}

.tx-pointer {
  cursor: pointer
}


.tx-bold {
  font-weight: 600;
}


.tx-medium {
  font-weight: 400;
}

.tx-normal {
  font-weight: 300;
}

.tx-underline {
  text-decoration: underline;
}

.tx-thin {
  font-weight: 100;
}

.tx-sm {
  font-size: 12px;
}

.tx-xl {
  font-size: 22px;
}

.tx-lg {
  font-size: 16px;
}


.link-hover {
  position: relative;
  display: inline-flex;

  &:after {
    height: 2px;
    background: currentColor;
    width: 0;
    content: "";
    display: block;
    transition: all .6s cubic-bezier(.165, .84, .44, 1) .0s;
    position: absolute;
    bottom: 0;
  }

  &:hover {
    &:after {
      width: 100%;
    }
  }

  &.active:after {
    width: 100%;
  }
}

.heading-start {

  @include for-size("phone-only") {
    width: 100%;
  }

}

// typography colors
.tx-body {
  color: var(--font-color-base);
}

.tx-heading {
  color: var(--heading-color);

}

.tx-primary {
  color: $primary;
}

.tx-info {
  color: $info;
}

.tx-secondary {
  color: $secondary;
}

.tx-warning {
  color: $warning;
}

.tx-danger {
  color: $danger;
}

.tx-success {
  color: $success;
}

.tx-teal {
  color: $teal;
}

.tx-pink {
  color: $pink;
}


.tx-dark {
  color: $dark;
}

.tx-light {
  color: var(--light)
}

.header-highlight {
  position: relative;
  z-index: 1;

  &:before {
    content: "";
    position: absolute;
    bottom: 3px;
    width: 100%;
    height: 10px;
    background: $secondary;
    left: 0;
    z-index: -1;
  }
}


@mixin make-opacity($num) {
  .tx-#{$num} {
    font-size: #{$num}px;
  }

}

$num: 10;
@while $num <= 80 {
  @include make-opacity($num);
  $num: $num + 2;
}
